# 미니멀 테마 기반 개발 가이드라인

## 🎨 디자인 시스템

### 색상 팔레트
- **Primary**: 검정 (#000000) - 주요 액션, 강조 요소
- **Secondary**: 회색 (#6B7280) - 보조 텍스트, 경계선
- **Accent**: 밝은 회색 (#F3F4F6) - 배경, 구분선
- **Neutral**: 흰색 (#FFFFFF) - 카드 배경
- **Text**: 검정 (#000000) - 주요 텍스트
- **Text Secondary**: 회색 (#6B7280) - 보조 텍스트

### 타이포그래피
- **Headings**: font-bold, 검정색
- **Body**: font-normal, 검정색
- **Caption**: text-sm, 회색
- **Label**: text-xs, 회색

### 간격 및 레이아웃
- **Container**: max-w-7xl, mx-auto, px-4
- **Section**: py-12, px-4
- **Grid**: gap-6, responsive columns
- **Spacing**: 4px (1), 8px (2), 12px (3), 16px (4), 24px (6), 32px (8), 48px (12)

## 🧩 필수 컴포넌트 사용법

### 1. 레이아웃 컴포넌트
```tsx
import { Section, Container, Grid } from '@/components/ui'

// 페이지 구조
<Section>
  <Container>
    <Grid cols={1} md:cols={2} lg:cols={3}>
      {/* 콘텐츠 */}
    </Grid>
  </Container>
</Section>
```

### 2. 타이포그래피
```tsx
import { H1, H2, H3, Body, Caption, Label } from '@/components/ui'

// 제목
<H1>메인 제목</H1>
<H2>섹션 제목</H2>
<H3>서브 제목</H3>

// 텍스트
<Body>본문 텍스트</Body>
<Caption>설명 텍스트</Caption>
<Label>라벨 텍스트</Label>
```

### 3. 카드 컴포넌트
```tsx
import { Card, CardHeader, CardContent, CardFooter } from '@/components/ui'

<Card>
  <CardHeader>
    <H3>카드 제목</H3>
  </CardHeader>
  <CardContent>
    <Body>카드 내용</Body>
  </CardContent>
</Card>
```

### 4. 버튼 컴포넌트
```tsx
import { Button } from '@/components/ui'

// 주요 액션
<Button>기본 버튼</Button>

// 보조 액션
<Button variant="secondary">보조 버튼</Button>

// 아웃라인
<Button variant="outline">아웃라인 버튼</Button>
```

### 5. 배지 컴포넌트
```tsx
import { Badge } from '@/components/ui'

// 기본 배지
<Badge>기본</Badge>

// 카테고리 배지
<Badge variant="category">카테고리</Badge>

// 할인 배지
<Badge variant="discount">할인</Badge>
```

### 6. 헤더 컴포넌트
```tsx
import { Header } from '@/components/ui'

<Header
  brandName="골 때리는 그녀들"
  tagline="축구 데이터 센터"
  navItems={[
    { label: '홈', href: '/' },
    { label: '시즌', href: '/seasons' }
  ]}
/>
```

### 7. 히어로 배너
```tsx
import { HeroBanner } from '@/components/ui'

<HeroBanner
  title="골 때리는 그녀들"
  subtitle="축구 데이터 센터"
  description="모든 경기 결과와 선수 통계를 한눈에"
  imageUrl="https://picsum.photos/1200/400"
  ctaText="시즌 보기"
  ctaHref="/seasons"
/>
```

### 8. 상품 카드
```tsx
import { ProductCard } from '@/components/ui'

<ProductCard
  title="시즌 1"
  description="첫 번째 시즌 결과"
  price="무료"
  imageUrl="https://picsum.photos/300/200"
  isLive={false}
  href="/seasons/season-1"
/>
```

## 🚫 금지사항

### 색상 사용 금지
- ❌ 빨간색 (#EF4444) - 팀 색상으로 사용하지 않음
- ❌ 파란색 (#3B82F6) - 팀 색상으로 사용하지 않음
- ❌ 초록색 (#10B981) - 성공 표시로 사용하지 않음
- ❌ 노란색 (#F59E0B) - 경고 표시로 사용하지 않음

### 대신 사용할 색상
- ✅ 검정색 (#000000) - 주요 요소, 승리 표시
- ✅ 회색 (#6B7280) - 보조 요소, 중립 표시
- ✅ 밝은 회색 (#F3F4F6) - 배경, 구분선

## 📱 반응형 디자인

### 브레이크포인트
- **Mobile**: < 768px
- **Tablet**: 768px - 1024px
- **Desktop**: > 1024px

### Grid 시스템
```tsx
// 모바일: 1열, 태블릿: 2열, 데스크톱: 3열
<Grid cols={1} md:cols={2} lg:cols={3}>

// 모바일: 1열, 데스크톱: 2열
<Grid cols={1} lg:cols={2}>
```

## 🎯 팀 색상 가이드라인

### 기존 팀 색상 변경
- **홈팀**: 파란색 → 검정색 (#000000)
- **어웨이팀**: 빨간색 → 회색 (#6B7280)

### 예시
```tsx
// 기존 (사용 금지)
className="bg-blue-50 text-blue-800"
className="bg-red-50 text-red-800"

// 변경 후 (필수 사용)
className="bg-gray-50 text-gray-800"
className="bg-gray-50 text-gray-800"
```

## 🔧 유틸리티 클래스

### 자주 사용하는 클래스
```css
/* 배경 */
.bg-neutral-50    /* 연한 회색 배경 */
.bg-white         /* 흰색 배경 */

/* 텍스트 */
.text-black       /* 검정 텍스트 */
.text-gray-600    /* 회색 텍스트 */
.text-gray-500    /* 연한 회색 텍스트 */

/* 경계선 */
.border-gray-200  /* 연한 회색 경계선 */
.border-gray-300  /* 회색 경계선 */

/* 그림자 */
.shadow-[0_2px_8px_rgba(0,0,0,0.1)]  /* 카드 그림자 */
```

## 📋 컴포넌트 개발 체크리스트

새로운 컴포넌트를 만들 때 다음을 확인하세요:

- [ ] 미니멀 색상 팔레트 사용
- [ ] 반응형 디자인 적용
- [ ] 접근성 고려 (aria-label, semantic HTML)
- [ ] TypeScript 타입 정의
- [ ] 재사용 가능한 구조
- [ ] 테마 상수 사용 (src/constants/theme.ts)

## 🎨 테마 상수 사용법

```tsx
import { THEME } from '@/constants/theme'

// 색상 사용
className={`bg-[${THEME.colors.primary}]`}
className={`text-[${THEME.colors.text}]`}

// 간격 사용
className={`p-[${THEME.spacing.md}]`}
className={`gap-[${THEME.spacing.lg}]`}
```

## 📝 코드 스타일

### 컴포넌트 구조
```tsx
'use client'

import { cn } from '@/lib/utils'
import { THEME } from '@/constants/theme'

interface ComponentProps {
  className?: string
  children: React.ReactNode
}

export function Component({ className, children }: ComponentProps) {
  return (
    <div className={cn(
      'bg-white border border-gray-200 rounded-lg p-4',
      className
    )}>
      {children}
    </div>
  )
}
```

### 조건부 스타일링
```tsx
// ❌ 삼항 연산자 사용 금지
className={isActive ? 'bg-blue-500' : 'bg-gray-500'}

// ✅ 조건부 클래스 사용
className={cn(
  'bg-gray-500',
  isActive && 'bg-black'
)}
```

이 가이드라인을 따라 일관된 미니멀 테마의 UI를 구현하세요!
